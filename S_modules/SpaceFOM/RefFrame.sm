/*****************************************************************************
 * General TrickHLA Space Reference Federation Object Model (SpaceFOM)
 * Simulation Definition Object for the standard reference frames.
 *---------------------------------------------------------------------------*
 * PURPOSE:
 *    (This is a Simulation Definition 'S_define' module that defines the
 *     standard SpaceFOM reference frame simulation object instance.)
 ****************************************************************************/
/*****************************************************************************
 *       Author: Edwin Z. Crues
 *         Date: December 2023
 *       E-Mail: Edwin.Z.Crues@nasa.gov
 *        Phone: 281-483-2902
 * Organization: Mail Code ER7
 *               Simulation & Graphics Branch
 *               Software, Robotics & Simulation Division
 *               2101 NASA Parkway
 *               Houston, Texas 77058
 *---------------------------------------------------------------------------*
 * Modified By: 
 *        Date: 
 * Description: 
 ****************************************************************************/

// SpaceFOM include files.
##include "SpaceFOM/RefFrameConditionalBase.hh"
##include "SpaceFOM/RefFrameData.hh"
##include "SpaceFOM/RefFrameDeleted.hh"
##include "SpaceFOM/RefFrameLagComp.hh"
##include "SpaceFOM/RefFrameOwnershipHandler.hh"
##include "SpaceFOM/RefFrameState.hh"
##include "SpaceFOM/RefFrameTree.hh"

// Include TrickHLA Packing object base simulation definition module.
#include "THLAPackingBase.sm"

//==========================================================================
// SIM_OBJECT: SpaceFOMRefFrameSimObject - A SpaceFOM reference frame
// instance simulation object definition.
//==========================================================================
class SpaceFOMRefFrameSimObject : public TrickHLAPackingBaseSimObject {

  public:
   
   /* HLA associated reference frames packing object. */
   SpaceFOM::RefFrameState frame_packing;

   /* HLA lag compensation object. */
   SpaceFOM::RefFrameLagComp lag_compensation;

   /* HLA conditional object. */
   SpaceFOM::RefFrameConditionalBase conditional;

   /* HLA Ownership Handler object. */
   SpaceFOM::RefFrameOwnershipHandler ownership_handler;

   /* HLA RefFrame deleted object. */
   SpaceFOM::RefFrameDeleted deleted_callback;

   // SimObject constructor.
   SpaceFOMRefFrameSimObject( SpaceFOM::RefFrameTree & frame_tree_ref,
                              SpaceFOM::RefFrameData & frame_data_ref,   
                              unsigned short           _INIT = P_HLA_INIT )
      : TrickHLAPackingBaseSimObject( _INIT ),
        frame_packing( frame_data_ref ),
        lag_compensation( frame_packing ),
        conditional( frame_packing ),
        frame_tree( frame_tree_ref )
   {
      // Set the service references for the base class.
      packing_base_ptr     = &frame_packing;
      lag_comp_base_ptr    = &lag_compensation;
      conditional_base_ptr = &conditional;
      ownership_base_ptr   = &ownership_handler;
      deleted_base_ptr     = &deleted_callback;
      
      //
      // Initialization jobs
      //
      P_INIT ("initialization") frame_tree.add_frame( &frame_packing );
   }

  private:
   // Reference to the frame tree manager.
   SpaceFOM::RefFrameTree & frame_tree;

  private:
   // This object is not copyable
   SpaceFOMRefFrameSimObject( SpaceFOMRefFrameSimObject const & );
   SpaceFOMRefFrameSimObject & operator=( SpaceFOMRefFrameSimObject const & );
};
