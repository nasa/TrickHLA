/*****************************************************************************
 * General TrickHLA Simulation Definition Object
 *---------------------------------------------------------------------------*
 * PURPOSE:
 *    (This is a Simulation Definition 'S_define' module that defines a
 *     general HLA interface using TrickHLA for Trick based simulations.)
 ****************************************************************************/
/*****************************************************************************
 *       Author: Edwin Z. Crues
 *         Date: April 2020
 *       E-Mail: Edwin.Z.Crues@nasa.gov
 *        Phone: 281-483-2902
 * Organization: Mail Code ER7
 *               Simulation & Graphics Branch
 *               Software, Robotics & Simulation Division
 *               2101 NASA Parkway
 *               Houston, Texas 77058
 *---------------------------------------------------------------------------*
 * Modified By: Edwin Z. Crues
 *        Date: April 2020
 * Description: Extended THLABase.sm to support TrickHLA Simple Init Scheme.
 ****************************************************************************/

// TrickHLA SimObject base class.
#include "THLABase.sm"

// TrickHLA Simple Init Scheme Execution Control class definition.
##include "TrickHLA/ExecutionControl.hh"

//  TrickHLA Simple Init Scheme Execution Configuration (ExCO) class definition.
##include "TrickHLA/ExecutionConfiguration.hh"

//=========================================================================
// SIM_OBJECT: THLA - Extend the TrickHLA Base SimObject.
//=========================================================================
class THLASimObject : public THLABaseSimObject {

 public:

   // The Simple TrickHLA example Execution Configuration Object (ExCO).
   TrickHLA::ExecutionConfiguration simple_sim_config;

   // The Simple TrickHLA Execution Control object.
   TrickHLA::ExecutionControl execution_control;

   THLASimObject( double main_thread_data_cycle,
                  double main_thread_interaction_cycle,
                  unsigned short _1ST  = 1,
                  unsigned short _INIT = 60,
                  unsigned short _LAST = 65534 )
     : THLABaseSimObject( main_thread_data_cycle,
                          main_thread_interaction_cycle,
                          _1ST,
                          _INIT,
                          _LAST ),
       simple_sim_config( "THLA.simple_sim_config" ),
       execution_control( simple_sim_config )
   {
      //-----------------------
      //-- DEFAULT DATA JOBS --
      //-----------------------
      ("default_data") federate.setup( federate_amb,
                                       manager,
                                       execution_control );
   }

 private:
   // Do not allow the implicit copy constructor or assignment operator.
   THLASimObject( THLASimObject const & rhs );
   THLASimObject & operator=( THLASimObject const & rhs );

   // Do not allow the default constructor.
   THLASimObject();
};
