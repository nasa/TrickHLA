/*****************************************************************************
 * General TrickHLA Space Reference Federation Object Model (SpaceFOM)
 * Simulation Definition Object for a JEOD-based physical entity.
 *---------------------------------------------------------------------------*
 * This is a Simulation Definition (S_define) module that defines the
 * SpaceFOM JEOD-based PhysicalEntity simulation object instance.
 ****************************************************************************/
/*****************************************************************************
 *       Author: Edwin Z. Crues
 *         Date: January 2024
 *       E-Mail: Edwin.Z.Crues@nasa.gov
 *        Phone: 281-483-2902
 * Organization: Mail Code ER7
 *               Simulation & Graphics Branch
 *               Software, Robotics & Simulation Division
 *               2101 NASA Parkway
 *               Houston, Texas 77058
 *---------------------------------------------------------------------------*
 * Modified By: 
 *        Date: 
 * Description: 
 ****************************************************************************/
 

//==========================================================================
// SIM_OBJECT: JEODPhysicalEntitySimObject - A SpaceFOM JEOD-based
// PhysicalEntity instance simulation object definition.
//==========================================================================

// Include TrickHLA Packing object base simulation definition module.
#include "THLAPackingBase.sm"

// SpaceFOM includes.
##include "JEOD/JEODPhysicalEntity.hh"
##include "SpaceFOM/PhysicalEntityLagComp.hh"
##include "SpaceFOM/PhysicalEntityConditionalBase.hh"
##include "SpaceFOM/PhysicalEntityOwnershipHandler.hh"
##include "SpaceFOM/PhysicalEntityDeleted.hh"

class JEODPhysicalEntiySimObject : public TrickHLAPackingBaseSimObject {

  public:

   /* HLA associated reference frames packing object. */
   SpaceFOM::JEODPhysicalEntity entity_packing;

   /* HLA lag compensation object. */
   SpaceFOM::PhysicalEntityLagComp lag_compensation;

   /* HLA conditional object. */
   SpaceFOM::PhysicalEntityConditionalBase conditional;

   /* HLA Ownership Handler object. */
   SpaceFOM::PhysicalEntityOwnershipHandler ownership_handler;

   /* HLA Deleted object. */
   SpaceFOM::PhysicalEntityDeleted deleted_callback;

   JEODPhysicalEntiySimObject( jeod::DynBody & dyn_body_ref,
                               unsigned short _INIT = 59 )
      : TrickHLAPackingBaseSimObject( _INIT ),
        entity_packing(dyn_body_ref),
        lag_compensation( entity_packing ),
        conditional( entity_packing ),
        dyn_body(dyn_body_ref)
   {
      // Set the service references for the base class.
      packing_base_ptr     = &entity_packing;
      lag_comp_base_ptr    = &lag_compensation;
      conditional_base_ptr = &conditional;
      ownership_base_ptr   = &ownership_handler;
      deleted_base_ptr     = &deleted_callback;

      //
      // Initialization jobs
      //

   }

  protected:
   jeod::DynBody & dyn_body;

  private:
   // This object is not copyable
   JEODPhysicalEntiySimObject( JEODPhysicalEntiySimObject const & );
   JEODPhysicalEntiySimObject & operator=( JEODPhysicalEntiySimObject const & );

};
